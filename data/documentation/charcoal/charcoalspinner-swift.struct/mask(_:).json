{"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"attribute","text":"nonisolated"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mask","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Mask"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"mask","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Mask"},{"text":") -> ","kind":"text"},{"kind":"keyword","text":"some"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Mask"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(_:)"]}],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use overload where mask accepts a @ViewBuilder instead."}],"type":"paragraph"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/charcoal-ios.Charcoal\/documentation\/Charcoal","doc:\/\/charcoal-ios.Charcoal\/documentation\/Charcoal\/CharcoalSpinner-swift.struct","doc:\/\/charcoal-ios.Charcoal\/documentation\/Charcoal\/CharcoalSpinner-swift.struct\/View-Implementations"]]},"identifier":{"url":"doc:\/\/charcoal-ios.Charcoal\/documentation\/Charcoal\/CharcoalSpinner-swift.struct\/mask(_:)","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"mask","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Mask","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Mask","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"modules":[{"name":"Charcoal","relatedModules":["SwiftUICore"]}],"roleHeading":"Instance Method","platforms":[{"deprecatedAt":"100000.0","name":"iOS","unavailable":false,"message":"Use overload where mask accepts a @ViewBuilder instead.","introducedAt":"13.0","deprecated":false,"beta":false},{"message":"Use overload where mask accepts a @ViewBuilder instead.","deprecatedAt":"100000.0","introducedAt":"13.0","name":"iPadOS","deprecated":false,"unavailable":false,"beta":false},{"deprecatedAt":"100000.0","message":"Use overload where mask accepts a @ViewBuilder instead.","deprecated":false,"beta":false,"unavailable":false,"name":"Mac Catalyst","introducedAt":"13.0"},{"introducedAt":"10.15","beta":false,"unavailable":false,"deprecatedAt":"100000.0","deprecated":false,"name":"macOS","message":"Use overload where mask accepts a @ViewBuilder instead."},{"deprecated":false,"deprecatedAt":"100000.0","beta":false,"introducedAt":"13.0","unavailable":false,"name":"tvOS","message":"Use overload where mask accepts a @ViewBuilder instead."},{"message":"Use overload where mask accepts a @ViewBuilder instead.","beta":false,"deprecated":false,"name":"watchOS","introducedAt":"6.0","unavailable":false,"deprecatedAt":"100000.0"}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewPAAE4maskyQrqd__AaBRd__lF::SYNTHESIZED::s:15CharcoalSwiftUI0A7SpinnerV","extendedModule":"SwiftUICore","title":"mask(_:)","role":"symbol"},"abstract":[{"type":"text","text":"Inherited from "},{"code":"View.mask(_:)","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://charcoal-ios.Charcoal/documentation/Charcoal/CharcoalSpinner-swift.struct/View-Implementations":{"identifier":"doc:\/\/charcoal-ios.Charcoal\/documentation\/Charcoal\/CharcoalSpinner-swift.struct\/View-Implementations","abstract":[],"kind":"article","type":"topic","title":"View Implementations","url":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/view-implementations","role":"collectionGroup"},"doc://charcoal-ios.Charcoal/documentation/Charcoal/CharcoalSpinner-swift.struct/mask(_:)":{"kind":"symbol","identifier":"doc:\/\/charcoal-ios.Charcoal\/documentation\/Charcoal\/CharcoalSpinner-swift.struct\/mask(_:)","title":"mask(_:)","url":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"mask","kind":"identifier"},{"kind":"text","text":"<"},{"text":"Mask","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"Mask","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"type":"topic","abstract":[],"deprecated":true},"doc://charcoal-ios.Charcoal/documentation/Charcoal":{"role":"collection","title":"Charcoal","images":[{"type":"icon","identifier":"charcoal-icon.png"}],"url":"\/documentation\/charcoal","type":"topic","identifier":"doc:\/\/charcoal-ios.Charcoal\/documentation\/Charcoal","kind":"symbol","abstract":[{"type":"text","text":"PIXIV Design System"}]},"doc://charcoal-ios.Charcoal/documentation/Charcoal/CharcoalSpinner-swift.struct":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CharcoalSpinner","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/charcoal\/charcoalspinner-swift.struct","title":"CharcoalSpinner","type":"topic","abstract":[],"identifier":"doc:\/\/charcoal-ios.Charcoal\/documentation\/Charcoal\/CharcoalSpinner-swift.struct","navigatorTitle":[{"kind":"identifier","text":"CharcoalSpinner"}],"role":"symbol"},"charcoal-icon.png":{"type":"image","identifier":"charcoal-icon.png","variants":[{"url":"\/images\/charcoal-ios.Charcoal\/charcoal-icon.png","traits":["1x","light"]},{"url":"\/images\/charcoal-ios.Charcoal\/charcoal-icon~dark.png","traits":["1x","dark"]}],"alt":"A technology icon representing the Charcoal framework."}}}