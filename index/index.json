{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalballoon\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoalballoon\/positionofoverlay(targetframe:tooltipsize:canvasgeometrysize:spacingtoscreen:arrowheight:spacingtotarget:)","title":"static func positionOfOverlay(targetFrame: CGRect, tooltipSize: CGSize, canvasGeometrySize: CGSize, spacingToScreen: CGFloat, arrowHeight: CGFloat, spacingToTarget: CGFloat) -> CGSize","type":"method"},{"path":"\/documentation\/charcoal\/charcoalballoon\/show(text:anchorview:interactionmode:spacingtoscreen:gap:on:)","title":"static func show(text: String, anchorView: UIView, interactionMode: CharcoalOverlayInteractionMode, spacingToScreen: CGFloat, gap: CGFloat, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"},{"path":"\/documentation\/charcoal\/charcoalballoon\/tooltipx(anchorframe:tooltipsize:canvasgeometrysize:spacingtoscreen:)","title":"static func tooltipX(anchorFrame: CGRect, tooltipSize: CGSize, canvasGeometrySize: CGSize, spacingToScreen: CGFloat) -> CGFloat","type":"method"}],"path":"\/documentation\/charcoal\/charcoalballoon","title":"CharcoalBalloon","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultmbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultmbutton","title":"CharcoalDefaultMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultoverlaymbutton","title":"CharcoalDefaultOverlayMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultoverlaysbutton","title":"CharcoalDefaultOverlaySButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaldefaultsbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaldefaultsbutton","title":"CharcoalDefaultSButton","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/id","title":"let id: CharcoalIdentifiableOverlayView.IDValue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/hittest(_:with:)","title":"func hitTest(CGPoint, with: UIEvent?) -> UIView?","type":"method"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/touchesbegan(_:with:)","title":"func touchesBegan(Set<UITouch>, with: UIEvent?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/actioncomplete","title":"CharcoalIdentifiableOverlayView.ActionComplete","type":"typealias"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/actioncontent","title":"CharcoalIdentifiableOverlayView.ActionContent","type":"typealias"},{"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview\/idvalue","title":"CharcoalIdentifiableOverlayView.IDValue","type":"typealias"}],"path":"\/documentation\/charcoal\/charcoalidentifiableoverlayview","title":"CharcoalIdentifiableOverlayView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoallinkbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoallinkbutton","title":"CharcoalLinkButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalnavigationmbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalnavigationmbutton","title":"CharcoalNavigationMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalnavigationsbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalnavigationsbutton","title":"CharcoalNavigationSButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/primarycolor","title":"var primaryColor: UIColor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalprimarymbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalprimarymbutton","title":"CharcoalPrimaryMButton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/isfixed","title":"var isFixed: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/primarycolor","title":"var primaryColor: UIColor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalprimarysbutton\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalprimarysbutton","title":"CharcoalPrimarySButton","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalsnackbar\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoalsnackbar\/show(text:maxwidth:thumbnailimage:screenedge:screenedgespacing:action:on:)","title":"static func show(text: String, maxWidth: CGFloat, thumbnailImage: UIImage?, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, action: CharcoalAction?, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/charcoalsnackbar","title":"CharcoalSnackBar","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.class\/dismiss()","title":"class func dismiss()","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.class\/show(spinnersize:transparentbackground:interactionpassthrough:on:)","title":"class func show(spinnerSize: CGFloat, transparentBackground: Bool, interactionPassthrough: Bool, on: UIView?)","type":"method"}],"path":"\/documentation\/charcoal\/charcoalspinner-swift.class","title":"CharcoalSpinner","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitch\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalswitch\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitch\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoalswitch\/ison","title":"var isOn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitch\/awakefromnib()","title":"func awakeFromNib()","type":"method"}],"path":"\/documentation\/charcoal\/charcoalswitch","title":"CharcoalSwitch","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/ison","title":"var isOn: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalswitchingbutton\/register(onbutton:offbutton:)","title":"func register<T1, T2>(onButton: T1, offButton: T2)","type":"method"}],"path":"\/documentation\/charcoal\/charcoalswitchingbutton","title":"CharcoalSwitchingButton","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/lengthlimit","title":"var lengthLimit: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/editingrect(forbounds:)","title":"func editingRect(forBounds: CGRect) -> CGRect","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/layoutsubviews()","title":"func layoutSubviews()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/placeholderrect(forbounds:)","title":"func placeholderRect(forBounds: CGRect) -> CGRect","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/resignfirstresponder()","title":"func resignFirstResponder() -> Bool","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/rightviewrect(forbounds:)","title":"func rightViewRect(forBounds: CGRect) -> CGRect","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/setassertiveborder()","title":"func setAssertiveBorder()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/setbrandborder()","title":"func setBrandBorder()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfield\/textrect(forbounds:)","title":"func textRect(forBounds: CGRect) -> CGRect","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltextfield","title":"CharcoalTextField","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/assertivetext","title":"var assertiveText: String?","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/charcoaltextfield","title":"var charcoalTextField: CharcoalTextField","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/delegate","title":"var delegate: CharcoalTextFieldViewDelegate?","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/isuserinteractionenabled","title":"var isUserInteractionEnabled: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/lengthlimit","title":"var lengthLimit: Int","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/placeholder","title":"var placeholder: String?","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/title","title":"var title: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/hideassertivetext()","title":"func hideAssertiveText()","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/sethaserror(_:)","title":"func setHasError(Bool)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/showassertivetext(text:)","title":"func showAssertiveText(text: String)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltextfieldview\/updatecountlabel(text:haserror:)","title":"func updateCountLabel(text: String, hasError: Bool)","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltextfieldview","title":"CharcoalTextFieldView","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoast\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltoast\/show(text:maxwidth:appearance:screenedge:screenedgespacing:actioncallback:on:)","title":"static func show(text: String, maxWidth: CGFloat, appearance: CharcoalToastAppearance, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, actionCallback: ActionCallback?, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltoast","title":"CharcoalToast","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltooltip\/dismiss(id:)","title":"static func dismiss(id: CharcoalIdentifiableOverlayView.IDValue)","type":"method"},{"path":"\/documentation\/charcoal\/charcoaltooltip\/show(text:anchorview:on:)","title":"static func show(text: String, anchorView: UIView, on: UIView?) -> CharcoalIdentifiableOverlayView.IDValue","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltooltip","title":"CharcoalTooltip","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography10\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography10\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography10","title":"CharcoalTypography10","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography12\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography12\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography12","title":"CharcoalTypography12","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography14\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography14\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography14","title":"CharcoalTypography14","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography16\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography16\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography16","title":"CharcoalTypography16","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypography20\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypography20\/lineheight","title":"var lineHeight: CGFloat","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltypography20","title":"CharcoalTypography20","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/fontsize","title":"var fontSize: CGFloat","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/isbold","title":"var isBold: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/ismono","title":"var isMono: Bool","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/lineheight","title":"var lineHeight: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltypographylabel\/awakefromnib()","title":"func awakeFromNib()","type":"method"}],"path":"\/documentation\/charcoal\/charcoaltypographylabel","title":"CharcoalTypographyLabel","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalbutton","title":"CharcoalButton","type":"protocol"},{"path":"\/documentation\/charcoal\/charcoaltextfieldviewdelegate","title":"CharcoalTextFieldViewDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalaction\/init(title:actioncallback:)","title":"init(title: String, actionCallback: ActionCallback)","type":"init"}],"path":"\/documentation\/charcoal\/charcoalaction","title":"CharcoalAction","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/==(_:_:)","title":"static func == (CharcoalSpinner, CharcoalSpinner) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/init(spinnersize:transparentbackground:)","title":"init(spinnerSize: CGFloat, transparentBackground: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(activationpoint:)-3bli2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(activationpoint:)-6283n","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-5mopx","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-9ifet","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-9l7pz","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:)-14iev","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:)-969lq","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-15v1e","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-2cec7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-3j120","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-48h02","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-69t8a","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-88ktc","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-dkis","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-szmc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-25tbs","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-5ugzd","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-6dpl4","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-13zxl","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-5ysli","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-64j60","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-3c6t","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-7n6ps","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-9fy31","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-33a8f","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3k5pc","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3nl01","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3nzib","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-5q9h6","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-5zl7l","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-8bywk","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-9y6b4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-2qvws","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-6pxjz","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-8dnax","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-8pkx5","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-4w8uz","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-5eucc","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-7vd6j","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-7vew7","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-1oc51","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-8zzpn","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-fx6c","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-36739","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-5ggaz","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-7i93d","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-7l0xm","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-7vpng","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-9vido","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-36jkv","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-39z0z","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-3p90i","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-2djj","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-424ue","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-6ai0e","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alignmentguide(_:computevalue:)-8d2pq","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alignmentguide(_:computevalue:)-9xwt","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/aspectratio(_:contentmode:)-2npgx","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/aspectratio(_:contentmode:)-9yja2","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:in:fillstyle:)-8pmr4","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:in:fillstyle:)-ank1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(charcoalcolor:ignoressafeareaedges:)","title":"func background(charcoalColor: CharcoalAsset.ColorPaletteGenerated, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(in:fillstyle:)-3y43p","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(in:fillstyle:)-4hhc3","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-21lng","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-58naw","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-5hmkn","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-a627","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonstyle(_:)-7ovrn","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonstyle(_:)-8ik25","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalbackground1()","title":"func charcoalBackground1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalbackground2()","title":"func charcoalBackground2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalballoon(ispresenting:text:dismissafter:action:)","title":"func charcoalBalloon<Content>(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaldefaultbutton(size:isfixed:)","title":"func charcoalDefaultButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaldefaultoverlaybutton(size:isfixed:)","title":"func charcoalDefaultOverlayButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoallinkbutton()","title":"func charcoalLinkButton() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalmodal(title:style:tapbackgroundtodismiss:duration:maxwidth:ispresented:actions:content:)","title":"func charcoalModal(title: String?, style: CharcoalModalStyle, tapBackgroundToDismiss: Bool, duration: Double, maxWidth: CGFloat, isPresented: Binding<Bool>, actions: () -> some View, content: () -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalnavigationbutton(size:isfixed:)","title":"func charcoalNavigationButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfaceborder()","title":"func charcoalOnSurfaceBorder() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacelink1()","title":"func charcoalOnSurfaceLink1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacelink2()","title":"func charcoalOnSurfaceLink2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext1()","title":"func charcoalOnSurfaceText1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext2()","title":"func charcoalOnSurfaceText2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext3()","title":"func charcoalOnSurfaceText3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext4()","title":"func charcoalOnSurfaceText4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext5()","title":"func charcoalOnSurfaceText5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaloverlaycontainer()","title":"func charcoalOverlayContainer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalprimarybutton(size:isfixed:primarycolor:)","title":"func charcoalPrimaryButton(size: CharcoalButtonSize, isFixed: Bool, primaryColor: Color) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsnackbar(ispresenting:screenedge:screenedgespacing:text:thumbnailimage:dismissafter:action:)","title":"func charcoalSnackBar<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, thumbnailImage: Image?, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalspinner(ispresenting:spinnersize:transparentbackground:interactionpassthrough:)","title":"func charcoalSpinner(isPresenting: Binding<Bool>, spinnerSize: CGFloat, transparentBackground: Bool, interactionPassthrough: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface1()","title":"func charcoalSurface1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface2()","title":"func charcoalSurface2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface3()","title":"func charcoalSurface3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface4()","title":"func charcoalSurface4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface5()","title":"func charcoalSurface5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface6()","title":"func charcoalSurface6() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface7()","title":"func charcoalSurface7() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface8()","title":"func charcoalSurface8() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface9()","title":"func charcoalSurface9() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltextfield(label:countlabel:assistivetext:haserror:)","title":"func charcoalTextField(label: Binding<String>, countLabel: Binding<String>, assistiveText: Binding<String>, hasError: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltoast(ispresenting:screenedge:screenedgespacing:text:dismissafter:appearance:animationconfiguration:action:)","title":"func charcoalToast<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, dismissAfter: TimeInterval?, appearance: CharcoalToastAppearance, animationConfiguration: CharcoalToastAnimationConfiguration, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltoggle()","title":"func charcoalToggle() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltooltip(ispresenting:text:dismissafter:)","title":"func charcoalTooltip(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography10bold(issingleline:)","title":"func charcoalTypography10Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography10boldmono()","title":"func charcoalTypography10BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography10regular(issingleline:)","title":"func charcoalTypography10Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography10regularmono()","title":"func charcoalTypography10RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography12bold(issingleline:)","title":"func charcoalTypography12Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography12boldmono()","title":"func charcoalTypography12BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography12regular(issingleline:)","title":"func charcoalTypography12Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography12regularmono()","title":"func charcoalTypography12RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography14bold(issingleline:)","title":"func charcoalTypography14Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography14boldmono()","title":"func charcoalTypography14BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography14regular(issingleline:)","title":"func charcoalTypography14Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography14regularmono()","title":"func charcoalTypography14RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography16bold(issingleline:)","title":"func charcoalTypography16Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography16boldmono()","title":"func charcoalTypography16BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography16regular(issingleline:)","title":"func charcoalTypography16Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography16regularmono()","title":"func charcoalTypography16RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography20bold(issingleline:)","title":"func charcoalTypography20Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography20boldmono()","title":"func charcoalTypography20BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography20regular(issingleline:)","title":"func charcoalTypography20Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography20regularmono()","title":"func charcoalTypography20RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1qzvm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-61ngc","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-923uf","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1l1je","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3jqti","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8a967","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-39sj5","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5o2rs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7tiov","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4j4hc","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8rpe0","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8xy7g","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:_:for:)-4vvu3","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:_:for:)-8x2hw","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-5kbsg","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-7jjhf","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-89809","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-1o80z","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-3m18k","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-56093","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-6r9ej","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-7jft","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-wz0c","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2za39","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7u6gv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-18sb9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8znx2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2v7w3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttype:oncompletion:)-78qb6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5lh7b","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7qhd9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-1oqak","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-4cw3d","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-6aijz","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedobject(_:)-4gba","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedobject(_:)-5ihay","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedsceneobject(_:)-49hd4","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedsceneobject(_:)-7ysej","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:_:)-5t3a5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:_:)-96zs7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:_:)-5sdtb","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:_:)-5wamw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(charcoalcolor:)","title":"func foregroundStyle(charcoalColor: CharcoalAsset.ColorPaletteGenerated) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-1rjx","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-6elgk","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-6vjx8","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:)-5f0gh","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:)-q5wp","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)-12dug","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)-4cjqz","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)-652pz","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)-7xx7t","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listitemtint(_:)-6t1up","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listitemtint(_:)-88oyd","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionspacing(_:)-2jw95","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionspacing(_:)-5onb5","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-3mr04","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-4s9ge","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-5s1yy","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-14q5e","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-1lcv6","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-9jnty","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-452eo","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-5qm9h","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-68w18","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-6qswn","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-1a44e","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-1bq4c","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-4vw8c","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-5jwe2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-6nd8r","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:initial:_:)-1luzq","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:initial:_:)-6gvks","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:delegate:)-3qhkd","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:delegate:)-8vroa","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-1n8x4","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-7hwxz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-7kpyt","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-q3zp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:)-4t2ju","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:)-9e2nn","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/renameaction(_:)-3umh4","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/renameaction(_:)-7tlmo","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareainset(edge:alignment:spacing:content:)-56ksz","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareainset(edge:alignment:spacing:content:)-8yzir","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:)-28mxu","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:)-76gyw","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(_:anchor:)-19sak","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(_:anchor:)-3mq02","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1colq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-57n59","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7j6up","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-45w2l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-4b19y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-4jc5r","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-5kai4","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-6o64a","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-pfhc","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-2yw7k","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-36u48","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-65rfi","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-57csl","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-61b6i","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-7h13m","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-1ydv9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-3iv81","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-6i260","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-1paxk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-8c9ej","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-tbee","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8c07e","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9emoe","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9h85m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1xcjb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-77hdg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9my4f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(content:)-4z6xi","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(content:)-70r1l","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-34sey","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-5gt6n","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-7gwdc","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typesettinglanguage(_:isenabled:)-1wqhf","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typesettinglanguage(_:isenabled:)-3venk","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/view-implementations","title":"View Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(activationpoint:)-3bli2","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(activationpoint:)-6283n","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-5mopx","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-9ifet","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaction(named:_:)-9l7pz","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:)-14iev","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityactivationpoint(_:)-969lq","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-15v1e","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-2cec7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-3j120","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-48h02","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-69t8a","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-88ktc","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-dkis","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitycustomcontent(_:_:importance:)-szmc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-25tbs","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-5ugzd","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityhint(_:)-6dpl4","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-13zxl","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-5ysli","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityinputlabels(_:)-64j60","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-3c6t","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-7n6ps","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabel(_:)-9fy31","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-33a8f","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3k5pc","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3nl01","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:)-3nzib","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-5q9h6","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-5zl7l","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-8bywk","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entryid:entrylabel:)-9y6b4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-2qvws","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-6pxjz","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-8dnax","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:entries:entrylabel:)-8pkx5","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-4w8uz","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-5eucc","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-7vd6j","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotor(_:textranges:)-7vew7","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-1oc51","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-8zzpn","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityvalue(_:)-fx6c","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-36739","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-5ggaz","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:)-7i93d","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-7l0xm","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-7vpng","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:actions:message:)-9vido","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-36jkv","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-39z0z","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:)-3p90i","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-2djj","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-424ue","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(_:ispresented:presenting:actions:message:)-6ai0e","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alignmentguide(_:computevalue:)-8d2pq","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alignmentguide(_:computevalue:)-9xwt","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/aspectratio(_:contentmode:)-2npgx","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/aspectratio(_:contentmode:)-9yja2","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:in:fillstyle:)-8pmr4","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(_:in:fillstyle:)-ank1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(charcoalcolor:ignoressafeareaedges:)","title":"func background(charcoalColor: CharcoalAsset.ColorPaletteGenerated, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(in:fillstyle:)-3y43p","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/background(in:fillstyle:)-4hhc3","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-21lng","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-58naw","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-5hmkn","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badge(_:)-a627","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonstyle(_:)-7ovrn","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/buttonstyle(_:)-8ik25","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalbackground1()","title":"func charcoalBackground1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalbackground2()","title":"func charcoalBackground2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalballoon(ispresenting:text:dismissafter:action:)","title":"func charcoalBalloon<Content>(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaldefaultbutton(size:isfixed:)","title":"func charcoalDefaultButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaldefaultoverlaybutton(size:isfixed:)","title":"func charcoalDefaultOverlayButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoallinkbutton()","title":"func charcoalLinkButton() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalmodal(title:style:tapbackgroundtodismiss:duration:maxwidth:ispresented:actions:content:)","title":"func charcoalModal(title: String?, style: CharcoalModalStyle, tapBackgroundToDismiss: Bool, duration: Double, maxWidth: CGFloat, isPresented: Binding<Bool>, actions: () -> some View, content: () -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalnavigationbutton(size:isfixed:)","title":"func charcoalNavigationButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfaceborder()","title":"func charcoalOnSurfaceBorder() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacelink1()","title":"func charcoalOnSurfaceLink1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacelink2()","title":"func charcoalOnSurfaceLink2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext1()","title":"func charcoalOnSurfaceText1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext2()","title":"func charcoalOnSurfaceText2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext3()","title":"func charcoalOnSurfaceText3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext4()","title":"func charcoalOnSurfaceText4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalonsurfacetext5()","title":"func charcoalOnSurfaceText5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaloverlaycontainer()","title":"func charcoalOverlayContainer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalprimarybutton(size:isfixed:primarycolor:)","title":"func charcoalPrimaryButton(size: CharcoalButtonSize, isFixed: Bool, primaryColor: Color) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsnackbar(ispresenting:screenedge:screenedgespacing:text:thumbnailimage:dismissafter:action:)","title":"func charcoalSnackBar<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, thumbnailImage: Image?, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalspinner(ispresenting:spinnersize:transparentbackground:interactionpassthrough:)","title":"func charcoalSpinner(isPresenting: Binding<Bool>, spinnerSize: CGFloat, transparentBackground: Bool, interactionPassthrough: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface1()","title":"func charcoalSurface1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface2()","title":"func charcoalSurface2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface3()","title":"func charcoalSurface3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface4()","title":"func charcoalSurface4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface5()","title":"func charcoalSurface5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface6()","title":"func charcoalSurface6() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface7()","title":"func charcoalSurface7() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface8()","title":"func charcoalSurface8() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoalsurface9()","title":"func charcoalSurface9() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltextfield(label:countlabel:assistivetext:haserror:)","title":"func charcoalTextField(label: Binding<String>, countLabel: Binding<String>, assistiveText: Binding<String>, hasError: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltoast(ispresenting:screenedge:screenedgespacing:text:dismissafter:appearance:animationconfiguration:action:)","title":"func charcoalToast<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, dismissAfter: TimeInterval?, appearance: CharcoalToastAppearance, animationConfiguration: CharcoalToastAnimationConfiguration, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltoggle()","title":"func charcoalToggle() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltooltip(ispresenting:text:dismissafter:)","title":"func charcoalTooltip(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography10bold(issingleline:)","title":"func charcoalTypography10Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography10boldmono()","title":"func charcoalTypography10BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography10regular(issingleline:)","title":"func charcoalTypography10Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography10regularmono()","title":"func charcoalTypography10RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography12bold(issingleline:)","title":"func charcoalTypography12Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography12boldmono()","title":"func charcoalTypography12BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography12regular(issingleline:)","title":"func charcoalTypography12Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography12regularmono()","title":"func charcoalTypography12RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography14bold(issingleline:)","title":"func charcoalTypography14Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography14boldmono()","title":"func charcoalTypography14BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography14regular(issingleline:)","title":"func charcoalTypography14Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography14regularmono()","title":"func charcoalTypography14RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography16bold(issingleline:)","title":"func charcoalTypography16Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography16boldmono()","title":"func charcoalTypography16BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography16regular(issingleline:)","title":"func charcoalTypography16Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography16regularmono()","title":"func charcoalTypography16RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography20bold(issingleline:)","title":"func charcoalTypography20Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography20boldmono()","title":"func charcoalTypography20BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography20regular(issingleline:)","title":"func charcoalTypography20Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/charcoaltypography20regularmono()","title":"func charcoalTypography20RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1qzvm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-61ngc","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:)-923uf","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1l1je","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3jqti","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8a967","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-39sj5","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5o2rs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7tiov","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4j4hc","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8rpe0","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8xy7g","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:_:for:)-4vvu3","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:_:for:)-8x2hw","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-5kbsg","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-7jjhf","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(_:issuppressed:)-89809","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-1o80z","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-3m18k","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogconfirmationlabel(_:)-56093","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-6r9ej","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-7jft","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogmessage(_:)-wz0c","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2za39","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7u6gv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-18sb9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8znx2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2v7w3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttype:oncompletion:)-78qb6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5lh7b","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7qhd9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-1oqak","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-4cw3d","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileexporterfilenamelabel(_:)-6aijz","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedobject(_:)-4gba","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedobject(_:)-5ihay","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedsceneobject(_:)-49hd4","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedsceneobject(_:)-7ysej","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:_:)-5t3a5","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedscenevalue(_:_:)-96zs7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:_:)-5sdtb","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/focusedvalue(_:_:)-5wamw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/foregroundstyle(charcoalcolor:)","title":"func foregroundStyle(charcoalColor: CharcoalAsset.ColorPaletteGenerated) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-1rjx","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-6elgk","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/help(_:)-6vjx8","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:)-5f0gh","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:)-q5wp","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)-12dug","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)-4cjqz","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)-652pz","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:)-7xx7t","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listitemtint(_:)-6t1up","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listitemtint(_:)-88oyd","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionspacing(_:)-2jw95","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/listsectionspacing(_:)-5onb5","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-3mr04","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-4s9ge","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:)-5s1yy","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-14q5e","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-1lcv6","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitle(_:displaymode:)-9jnty","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-452eo","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-5qm9h","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-68w18","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationdocument(_:preview:)-6qswn","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-1a44e","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-1bq4c","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-4vw8c","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-5jwe2","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationtitle(_:)-6nd8r","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:initial:_:)-1luzq","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:initial:_:)-6gvks","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:delegate:)-3qhkd","title":"func onDrop(of: [String], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:delegate:)-8vroa","title":"func onDrop(of: [UTType], delegate: DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-1n8x4","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-7hwxz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-7kpyt","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ondrop(of:istargeted:perform:)-q3zp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:)-4t2ju","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:)-9e2nn","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/renameaction(_:)-3umh4","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/renameaction(_:)-7tlmo","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareainset(edge:alignment:spacing:content:)-56ksz","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareainset(edge:alignment:spacing:content:)-8yzir","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:)-28mxu","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:)-76gyw","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(_:anchor:)-19sak","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(_:anchor:)-3mq02","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1colq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-57n59","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7j6up","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-45w2l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-4b19y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:editabletokens:placement:prompt:token:)-4jc5r","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-5kai4","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-6o64a","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:ispresented:placement:prompt:)-pfhc","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-2yw7k","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-36u48","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:)-65rfi","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-57csl","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-61b6i","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:placement:prompt:suggestions:)-7h13m","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-1ydv9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-3iv81","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:ispresented:placement:prompt:token:)-6i260","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-1paxk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-8c9ej","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:placement:prompt:token:)-tbee","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8c07e","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9emoe","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9h85m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1xcjb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-77hdg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9my4f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(content:)-4z6xi","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(content:)-70r1l","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-34sey","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-5gt6n","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typeselectequivalent(_:)-7gwdc","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typesettinglanguage(_:isenabled:)-1wqhf","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/typesettinglanguage(_:isenabled:)-3venk","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalspinner-swift.struct","title":"CharcoalSpinner","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/body(content:)","title":"func body(content: CharcoalSpinnerModifier.Content) -> some View","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/animation(_:)","title":"func animation(Animation?) -> some ViewModifier","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/concat(_:)","title":"func concat<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some ViewModifier","type":"method"}],"path":"\/documentation\/charcoal\/charcoalspinnermodifier\/viewmodifier-implementations","title":"ViewModifier Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalspinnermodifier","title":"CharcoalSpinnerModifier","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration\/init(enablepositionanimation:animation:)","title":"init(enablePositionAnimation: Bool, animation: Animation)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration\/animation","title":"let animation: Animation","type":"property"},{"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration\/enablepositionanimation","title":"let enablePositionAnimation: Bool","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration\/default","title":"static let `default`: CharcoalToastAnimationConfiguration","type":"property"}],"path":"\/documentation\/charcoal\/charcoaltoastanimationconfiguration","title":"CharcoalToastAnimationConfiguration","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/actioncallback","title":"ActionCallback","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalmodalstyle\/bottomsheet","title":"case bottomSheet","type":"case"},{"path":"\/documentation\/charcoal\/charcoalmodalstyle\/center","title":"case center","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalmodalstyle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoalmodalstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoalmodalstyle","title":"CharcoalModalStyle","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/block","title":"case block","type":"case"},{"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/dimissontouch","title":"case dimissOnTouch","type":"case"},{"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/passthrough","title":"case passThrough","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/charcoal\/charcoaloverlayinteractionmode","title":"CharcoalOverlayInteractionMode","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalshared\/charcoalconfig\/uikitconfigs\/fixedsizecategory","title":"var fixedSizeCategory: UIContentSizeCategory?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalshared\/charcoalconfig\/uikitconfigs\/default","title":"static let `default`: CharcoalConfig.UIKitConfigs","type":"property"}],"path":"\/documentation\/charcoal\/charcoalshared\/charcoalconfig\/uikitconfigs","title":"CharcoalConfig.UIKitConfigs","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/charcoal\/charcoalshared\/charcoalconfig\/configuikit","title":"static var configUIKit: CharcoalConfig.UIKitConfigs","type":"property"}],"path":"\/documentation\/charcoal\/charcoalshared\/charcoalconfig","title":"CharcoalConfig","type":"extension"}],"path":"\/documentation\/charcoal\/charcoalshared","title":"CharcoalShared","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftui\/shape\/fill(_:strokecolor:linewidth:)","title":"func fill<S>(S, strokeColor: Color, lineWidth: CGFloat) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/swiftui\/shape","title":"Shape","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftui\/view\/background(charcoalcolor:ignoressafeareaedges:)","title":"func background(charcoalColor: CharcoalAsset.ColorPaletteGenerated, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalbackground1()","title":"func charcoalBackground1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalbackground2()","title":"func charcoalBackground2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalballoon(ispresenting:text:dismissafter:action:)","title":"func charcoalBalloon<Content>(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaldefaultbutton(size:isfixed:)","title":"func charcoalDefaultButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaldefaultoverlaybutton(size:isfixed:)","title":"func charcoalDefaultOverlayButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoallinkbutton()","title":"func charcoalLinkButton() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalmodal(title:style:tapbackgroundtodismiss:duration:maxwidth:ispresented:actions:content:)","title":"func charcoalModal(title: String?, style: CharcoalModalStyle, tapBackgroundToDismiss: Bool, duration: Double, maxWidth: CGFloat, isPresented: Binding<Bool>, actions: () -> some View, content: () -> some View) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalnavigationbutton(size:isfixed:)","title":"func charcoalNavigationButton(size: CharcoalButtonSize, isFixed: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalonsurfaceborder()","title":"func charcoalOnSurfaceBorder() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalonsurfacelink1()","title":"func charcoalOnSurfaceLink1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalonsurfacelink2()","title":"func charcoalOnSurfaceLink2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalonsurfacetext1()","title":"func charcoalOnSurfaceText1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalonsurfacetext2()","title":"func charcoalOnSurfaceText2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalonsurfacetext3()","title":"func charcoalOnSurfaceText3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalonsurfacetext4()","title":"func charcoalOnSurfaceText4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalonsurfacetext5()","title":"func charcoalOnSurfaceText5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaloverlaycontainer()","title":"func charcoalOverlayContainer() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalprimarybutton(size:isfixed:primarycolor:)","title":"func charcoalPrimaryButton(size: CharcoalButtonSize, isFixed: Bool, primaryColor: Color) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsnackbar(ispresenting:screenedge:screenedgespacing:text:thumbnailimage:dismissafter:action:)","title":"func charcoalSnackBar<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, thumbnailImage: Image?, dismissAfter: TimeInterval?, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalspinner(ispresenting:spinnersize:transparentbackground:interactionpassthrough:)","title":"func charcoalSpinner(isPresenting: Binding<Bool>, spinnerSize: CGFloat, transparentBackground: Bool, interactionPassthrough: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsurface1()","title":"func charcoalSurface1() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsurface2()","title":"func charcoalSurface2() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsurface3()","title":"func charcoalSurface3() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsurface4()","title":"func charcoalSurface4() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsurface5()","title":"func charcoalSurface5() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsurface6()","title":"func charcoalSurface6() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsurface7()","title":"func charcoalSurface7() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsurface8()","title":"func charcoalSurface8() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoalsurface9()","title":"func charcoalSurface9() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltextfield(label:countlabel:assistivetext:haserror:)","title":"func charcoalTextField(label: Binding<String>, countLabel: Binding<String>, assistiveText: Binding<String>, hasError: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltoast(ispresenting:screenedge:screenedgespacing:text:dismissafter:appearance:animationconfiguration:action:)","title":"func charcoalToast<Content>(isPresenting: Binding<Bool>, screenEdge: CharcoalPopupViewEdge, screenEdgeSpacing: CGFloat, text: String, dismissAfter: TimeInterval?, appearance: CharcoalToastAppearance, animationConfiguration: CharcoalToastAnimationConfiguration, action: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltoggle()","title":"func charcoalToggle() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltooltip(ispresenting:text:dismissafter:)","title":"func charcoalTooltip(isPresenting: Binding<Bool>, text: String, dismissAfter: TimeInterval?) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography10bold(issingleline:)","title":"func charcoalTypography10Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography10boldmono()","title":"func charcoalTypography10BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography10regular(issingleline:)","title":"func charcoalTypography10Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography10regularmono()","title":"func charcoalTypography10RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography12bold(issingleline:)","title":"func charcoalTypography12Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography12boldmono()","title":"func charcoalTypography12BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography12regular(issingleline:)","title":"func charcoalTypography12Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography12regularmono()","title":"func charcoalTypography12RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography14bold(issingleline:)","title":"func charcoalTypography14Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography14boldmono()","title":"func charcoalTypography14BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography14regular(issingleline:)","title":"func charcoalTypography14Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography14regularmono()","title":"func charcoalTypography14RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography16bold(issingleline:)","title":"func charcoalTypography16Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography16boldmono()","title":"func charcoalTypography16BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography16regular(issingleline:)","title":"func charcoalTypography16Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography16regularmono()","title":"func charcoalTypography16RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography20bold(issingleline:)","title":"func charcoalTypography20Bold(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography20boldmono()","title":"func charcoalTypography20BoldMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography20regular(issingleline:)","title":"func charcoalTypography20Regular(isSingleLine: Bool) -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/charcoaltypography20regularmono()","title":"func charcoalTypography20RegularMono() -> some View","type":"method"},{"path":"\/documentation\/charcoal\/swiftui\/view\/foregroundstyle(charcoalcolor:)","title":"func foregroundStyle(charcoalColor: CharcoalAsset.ColorPaletteGenerated) -> some View","type":"method"}],"path":"\/documentation\/charcoal\/swiftui\/view","title":"View","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/charcoal\/swiftui\/image\/init(charocalicon:)","title":"init(charocalIcon: CharcoalAsset.Images)","type":"init"}],"path":"\/documentation\/charcoal\/swiftui\/image","title":"Image","type":"extension"}],"path":"\/documentation\/charcoal\/swiftui","title":"SwiftUI","type":"extension"}],"icon":"charcoal-icon.png","path":"\/documentation\/charcoal","title":"Charcoal","type":"module"}]},"references":{"charcoal-icon.png":{"alt":"A technology icon representing the Charcoal framework.","identifier":"charcoal-icon.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/charcoal-icon.png"}]}},"schemaVersion":{"major":0,"minor":1,"patch":1}}